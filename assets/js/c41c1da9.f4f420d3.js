"use strict";(self.webpackChunkaaron=self.webpackChunkaaron||[]).push([[5315],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(a),h=r,k=c["".concat(l,".").concat(h)]||c[h]||u[h]||s;return a?n.createElement(k,o(o({ref:t},m),{},{components:a})):n.createElement(k,o({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5401:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const s={},o=void 0,i={unversionedId:"CS61A/lec/cs_lec_10",id:"CS61A/lec/cs_lec_10",title:"cs_lec_10",description:"- Lecture notes: link",source:"@site/docs/CS61A/lec/cs_lec_10.md",sourceDirName:"CS61A/lec",slug:"/CS61A/lec/cs_lec_10",permalink:"/aaron/docs/CS61A/lec/cs_lec_10",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CS61A/lec/cs_lec_10.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cs_lec_1",permalink:"/aaron/docs/CS61A/lec/cs_lec_1"},next:{title:"cs_lec_11",permalink:"/aaron/docs/CS61A/lec/cs_lec_11"}},l={},p=[],m={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"#r/lecture"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Lecture notes: link")),(0,r.kt)("h1",{id:"lecture-103"},"Lecture: 10/3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jupyter"},'print("Hello world i am cool")\n')),(0,r.kt)("p",null,"HMWK 4 is out\n",(0,r.kt)("strong",{parentName:"p"},"Iterators"),"\nA container can provide an iterator that provides access to its elements in order\niter(iterable): Return an iterator over the elements of an interable value\nnext(iterator): Returns next element in iterator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jupyter"},">>>s = [3,4,5]\n>>>t = iter(s)\n>>>next(t)\n3\n")),(0,r.kt)("p",null,"So here its kinda like the first, the ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"t")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"t")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.61508em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t")))))," thingy, points to something. The first ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"e"),(0,r.kt)("mi",{parentName:"mrow"},"x"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"next(t)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," will return the first element of the list. The following ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"e"),(0,r.kt)("mi",{parentName:"mrow"},"x"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"next(t)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," will return the subsequent elements of the list, one by one."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jupyter"},">>>s = [[1,2],3,4,5]\n>>>t = iter(s)\n>>>next(s)\nLIST not iterator\n>>>s\n[[1,2],3,4,5]\n>>>\n")),(0,r.kt)("p",null,"![","[chrome_UeB89kZuGq.png]","]"),(0,r.kt)("p",null,"An ",(0,r.kt)("strong",{parentName:"p"},"iterable value")," is any value that can be passed to iter to produce an iterator\n![","[chrome_F8TUN0xXED.png]","]\nObjects like lists, tuples, sets, dictionaries, strings, etc. are called iterables. In short and simpler terms, iterable is\xa0",(0,r.kt)("strong",{parentName:"p"},"anything that you can loop over"),"."),(0,r.kt)("p",null,"An ",(0,r.kt)("strong",{parentName:"p"},"iterator")," is returned from iter and can be passed to next; all iterators are mutable\n",(0,r.kt)("a",{parentName:"p",href:"!%5B%5Bchrome_c5xRMtsUoE.png%5D%5D"})),(0,r.kt)("p",null,"Example of errors:\n![","[pythonw_3fKNhKEPlv.png]","]\nWe see that from this example, the (iterable value) that is passed into the iterator shouldn't change."),(0,r.kt)("p",null,"Can't change the order of a dictionary in python."),(0,r.kt)("p",null,"![","[pythonw_taOCYuv6e4.png]","]\nHowever, above example shows that you can change the values within the dictionary (or iterable item that is being changed) freely, without causing an error."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"For statements"),"\nTurns out you can go through the contents of a list using an interator using a for statement\n![","[pythonw_nwAb4iTf3O.png]","]\nSo basically you can use an iterator with for statement, which will use up certain elements of the iterator (so if you for the iterator twice it wouldn't work), or u can direcly pass an iterable to for, which will auto create an iterator for the iterable."),(0,r.kt)("h1",{id:"built-in-iterator-functions"},"Built-in Iterator Functions"),(0,r.kt)("p",null,"![","[pythonw_oyE2FvM565.png]","]\nJust like the ",(0,r.kt)("strong",{parentName:"p"},"int, list,string")," functions, passing in an iterator into the ",(0,r.kt)("strong",{parentName:"p"},"iter")," function will just return the original iterator."),(0,r.kt)("p",null,"Iterator knows what it is iterating over and where the iterator itself is."),(0,r.kt)("p",null,"Many built-in Python sequence operations return iterators that compute results lazily\n1) map(func,iterable): Iterate over func(x) for x in iterable\n2) filter(func,iterable): Iterate over x in iterable if func(x)\n3) zip(first_iter,second_iter): Iterate over co-indexed (x,y) pairs\n4) reversed(sequence): Iterate over x in a sequence in reverse order"),(0,r.kt)("p",null,"To view contents of iterator, place resulting elements in a container"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"list(iterable). Create list containing all x in iterable"),(0,r.kt)("li",{parentName:"ul"},"tuple(iterable). Create tuple containing all x in iterable")),(0,r.kt)("p",null,"![","[pythonw_kz9UWCo26a.png]","]"),(0,r.kt)("p",null,"![","[pythonw_lc9y9fwxPu.png]","]\nThis shows what filter(x) exactly does, it filters certain elements of the iterator away that do not satisfy some mentioined condition. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The Zip Function"),"\nThe built-in ",(0,r.kt)("strong",{parentName:"p"},"zip")," function returns an iterator over co-indexed tuples.\n![","[chrome_rVNMgtOxtz.png]","]"),(0,r.kt)("p",null,"![","[chrome_4h2mNCKqPN.png]","]\nTwo distinct ways of writing a function ",(0,r.kt)("strong",{parentName:"p"},"palindrome")," that takes in a list ",(0,r.kt)("strong",{parentName:"p"},"s")," and returns whether the list is a palindrome or not."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Reasons for using Iterators"),"\nCode that processes an iterator (via next) or iterable(via for or iter) makes few assumptions about the data itself"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Changing the data representation from a ",(0,r.kt)("strong",{parentName:"li"},"list")," to a ",(0,r.kt)("strong",{parentName:"li"},"tuple, map object")," or ",(0,r.kt)("strong",{parentName:"li"},"dict_keys")," doesn't require rewriting code.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example: Casino Blackjack"),"\n1) The dealing of the card can be dealt with by a list containing a random order of the cards being passed into the iter function\n2) So then the dealing of the card uses the customised next() function for the dealer."))}c.isMDXComponent=!0}}]);
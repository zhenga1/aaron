"use strict";(self.webpackChunkaaronzheng=self.webpackChunkaaronzheng||[]).push([[0],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=i,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,o(o({ref:t},u),{},{components:r})):n.createElement(m,o({ref:t},u))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6201:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const a={},o=void 0,c={unversionedId:"CS61A/disc/cs_disc_2",id:"CS61A/disc/cs_disc_2",title:"cs_disc_2",description:"return print_all",source:"@site/docs/CS61A/disc/cs_disc_2.md",sourceDirName:"CS61A/disc",slug:"/CS61A/disc/cs_disc_2",permalink:"/docs/CS61A/disc/cs_disc_2",draft:!1,editUrl:"https://github.com/zhenga1/aaronzheng/tree/main/docs/CS61A/disc/cs_disc_2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cs_disc_1109",permalink:"/docs/CS61A/disc/cs_disc_1109"},next:{title:"cs_disc_928",permalink:"/docs/CS61A/disc/cs_disc_928"}},s={},l=[],u={toc:l};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"return print_all\nRecursive function return\nIf you return a recursive function then you can create another frame"),(0,i.kt)("p",null,"Credit cards use Luhn algorithm\nSum of digits of 2022 is 6 ->\nTASK: FIND ALL DIGITS OF SOME NUMBER, like 2022.\nBreak down into small tasks:\nSum all of the digits  = last digit + sum of digits of smaller number"),(0,i.kt)("p",null,"Iteration vs Recursion\nIteration is a special case of recursion\n4! = 4",(0,i.kt)("em",{parentName:"p"},"3"),"2",(0,i.kt)("em",{parentName:"p"},"1 = 24\nUsing while:\ndef fact_iter(n):\ntotal, k = 1,1\nwhile k<=n:\ntotal,k = total"),"k, k+1\nreturn total"),(0,i.kt)("p",null,"The recursive Leap of Faith\nIs fact implemented correctly?"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Verify the base case"),(0,i.kt)("li",{parentName:"ol"},"Treat fact as a functional abstraction"),(0,i.kt)("li",{parentName:"ol"},"Assume that fact(n-1) is correct"),(0,i.kt)("li",{parentName:"ol"},"Verify that fact(n) is correct")),(0,i.kt)("p",null,"Luhn sum\ntake every second digit from the credit card, double it.\nIf the doubled digit has value >9, then sum the digits of the double digit number\nTake the sum of all the digits. If is multiple of 10, then it is valid credit card number"))}d.isMDXComponent=!0}}]);
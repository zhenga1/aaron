"use strict";(self.webpackChunkaaronzheng=self.webpackChunkaaronzheng||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"CS61A","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Home","href":"/old_aaronzheng/docs/CS61A/Home","docId":"CS61A/Home"},{"type":"category","label":"PRACTICE FINAL","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"INTERPRETER","href":"/old_aaronzheng/docs/CS61A/PRACTICE FINAL/INTERPRETER","docId":"CS61A/PRACTICE FINAL/INTERPRETER"},{"type":"link","label":"TAIL RECURSION","href":"/old_aaronzheng/docs/CS61A/PRACTICE FINAL/TAIL RECURSION","docId":"CS61A/PRACTICE FINAL/TAIL RECURSION"},{"type":"link","label":"scheme","href":"/old_aaronzheng/docs/CS61A/PRACTICE FINAL/scheme","docId":"CS61A/PRACTICE FINAL/scheme"}]},{"type":"link","label":"cs_hmwk_notes","href":"/old_aaronzheng/docs/CS61A/cs_hmwk_notes","docId":"CS61A/cs_hmwk_notes"},{"type":"category","label":"disc","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CS_disc_926","href":"/old_aaronzheng/docs/CS61A/disc/CS_disc_926","docId":"CS61A/disc/CS_disc_926"},{"type":"link","label":"cs_921","href":"/old_aaronzheng/docs/CS61A/disc/cs_921","docId":"CS61A/disc/cs_921"},{"type":"link","label":"cs_disc_1","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_1","docId":"CS61A/disc/cs_disc_1"},{"type":"link","label":"cs_disc_1012","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_1012","docId":"CS61A/disc/cs_disc_1012"},{"type":"link","label":"cs_disc_1017","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_1017","docId":"CS61A/disc/cs_disc_1017"},{"type":"link","label":"cs_disc_1019","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_1019","docId":"CS61A/disc/cs_disc_1019"},{"type":"link","label":"cs_disc_103","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_103","docId":"CS61A/disc/cs_disc_103"},{"type":"link","label":"cs_disc_105","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_105","docId":"CS61A/disc/cs_disc_105"},{"type":"link","label":"cs_disc_1102","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_1102","docId":"CS61A/disc/cs_disc_1102"},{"type":"link","label":"cs_disc_1109","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_1109","docId":"CS61A/disc/cs_disc_1109"},{"type":"link","label":"cs_disc_2","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_2","docId":"CS61A/disc/cs_disc_2"},{"type":"link","label":"cs_disc_928","href":"/old_aaronzheng/docs/CS61A/disc/cs_disc_928","docId":"CS61A/disc/cs_disc_928"}]},{"type":"category","label":"lec","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cs_lec_7","href":"/old_aaronzheng/docs/CS61A/lec/Cs_lec_7","docId":"CS61A/lec/Cs_lec_7"},{"type":"link","label":"cs_intro","href":"/old_aaronzheng/docs/CS61A/lec/cs_intro","docId":"CS61A/lec/cs_intro"},{"type":"link","label":"cs_lec","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec","docId":"CS61A/lec/cs_lec"},{"type":"link","label":"cs_lec_1","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_1","docId":"CS61A/lec/cs_lec_1"},{"type":"link","label":"cs_lec_10","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_10","docId":"CS61A/lec/cs_lec_10"},{"type":"link","label":"cs_lec_11","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_11","docId":"CS61A/lec/cs_lec_11"},{"type":"link","label":"cs_lec_12","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_12","docId":"CS61A/lec/cs_lec_12"},{"type":"link","label":"cs_lec_13","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_13","docId":"CS61A/lec/cs_lec_13"},{"type":"link","label":"cs_lec_14","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_14","docId":"CS61A/lec/cs_lec_14"},{"type":"link","label":"cs_lec_15","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_15","docId":"CS61A/lec/cs_lec_15"},{"type":"link","label":"cs_lec_16","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_16","docId":"CS61A/lec/cs_lec_16"},{"type":"link","label":"cs_lec_17","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_17","docId":"CS61A/lec/cs_lec_17"},{"type":"link","label":"cs_lec_18","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_18","docId":"CS61A/lec/cs_lec_18"},{"type":"link","label":"cs_lec_19","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_19","docId":"CS61A/lec/cs_lec_19"},{"type":"link","label":"cs_lec_2","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_2","docId":"CS61A/lec/cs_lec_2"},{"type":"link","label":"Interpreter","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_20","docId":"CS61A/lec/cs_lec_20"},{"type":"link","label":"Database Management Systems","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_21","docId":"CS61A/lec/cs_lec_21"},{"type":"link","label":"Joining Two Tablees","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_22","docId":"CS61A/lec/cs_lec_22"},{"type":"link","label":"Create Table","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_23","docId":"CS61A/lec/cs_lec_23"},{"type":"link","label":"Aggregation","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_24","docId":"CS61A/lec/cs_lec_24"},{"type":"link","label":"cs_lec_25","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_25","docId":"CS61A/lec/cs_lec_25"},{"type":"link","label":"cs_lec_3","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_3","docId":"CS61A/lec/cs_lec_3"},{"type":"link","label":"cs_lec_4","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_4","docId":"CS61A/lec/cs_lec_4"},{"type":"link","label":"cs_lec_5","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_5","docId":"CS61A/lec/cs_lec_5"},{"type":"link","label":"cs_lec_6","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_6","docId":"CS61A/lec/cs_lec_6"},{"type":"link","label":"cs_lec_8","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_8","docId":"CS61A/lec/cs_lec_8"},{"type":"link","label":"cs_lec_9","href":"/old_aaronzheng/docs/CS61A/lec/cs_lec_9","docId":"CS61A/lec/cs_lec_9"}]},{"type":"category","label":"misc","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Problems i struggled w","href":"/old_aaronzheng/docs/CS61A/misc/Problems i struggled w","docId":"CS61A/misc/Problems i struggled w"},{"type":"link","label":"Quasiquotation","href":"/old_aaronzheng/docs/CS61A/misc/Quasiquotation","docId":"CS61A/misc/Quasiquotation"},{"type":"link","label":"Representation","href":"/old_aaronzheng/docs/CS61A/misc/Representation","docId":"CS61A/misc/Representation"},{"type":"link","label":"Scheme Doc","href":"/old_aaronzheng/docs/CS61A/misc/Scheme Doc","docId":"CS61A/misc/Scheme Doc"},{"type":"link","label":"Scheme syntax","href":"/old_aaronzheng/docs/CS61A/misc/Scheme syntax","docId":"CS61A/misc/Scheme syntax"},{"type":"link","label":"Sequences","href":"/old_aaronzheng/docs/CS61A/misc/Sequences","docId":"CS61A/misc/Sequences"},{"type":"link","label":"Special Forms","href":"/old_aaronzheng/docs/CS61A/misc/Special Forms","docId":"CS61A/misc/Special Forms"},{"type":"link","label":"Trees","href":"/old_aaronzheng/docs/CS61A/misc/TREES","docId":"CS61A/misc/TREES"},{"type":"link","label":"Untitled 1","href":"/old_aaronzheng/docs/CS61A/misc/Untitled 1","docId":"CS61A/misc/Untitled 1"},{"type":"link","label":"Untitled","href":"/old_aaronzheng/docs/CS61A/misc/Untitled","docId":"CS61A/misc/Untitled"},{"type":"link","label":"Useless_sql","href":"/old_aaronzheng/docs/CS61A/misc/Useless_sql","docId":"CS61A/misc/Useless_sql"},{"type":"link","label":"problems midterm practice","href":"/old_aaronzheng/docs/CS61A/misc/problems midterm practice","docId":"CS61A/misc/problems midterm practice"},{"type":"link","label":"recursion framework","href":"/old_aaronzheng/docs/CS61A/misc/recursion framework","docId":"CS61A/misc/recursion framework"},{"type":"link","label":"Scheme","href":"/old_aaronzheng/docs/CS61A/misc/retarded error","docId":"CS61A/misc/retarded error"},{"type":"link","label":"slicing","href":"/old_aaronzheng/docs/CS61A/misc/slicing","docId":"CS61A/misc/slicing"},{"type":"link","label":"tree_representation","href":"/old_aaronzheng/docs/CS61A/misc/tree_representation","docId":"CS61A/misc/tree_representation"},{"type":"link","label":"useless scheme","href":"/old_aaronzheng/docs/CS61A/misc/useless scheme","docId":"CS61A/misc/useless scheme"}]},{"type":"link","label":"sp21 final","href":"/old_aaronzheng/docs/CS61A/sp21 final","docId":"CS61A/sp21 final"}]},{"type":"category","label":"CS70","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Home","href":"/old_aaronzheng/docs/CS70/Home","docId":"CS70/Home"},{"type":"category","label":"Miscellaneous Self Study","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Brief","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/Brief","docId":"CS70/Miscellaneous Self Study/Brief"},{"type":"link","label":"Graphs","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/Graphs","docId":"CS70/Miscellaneous Self Study/Graphs"},{"type":"link","label":"Practice Problems","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/Practice Problems","docId":"CS70/Miscellaneous Self Study/Practice Problems"},{"type":"link","label":"Proofs","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/Proofs","docId":"CS70/Miscellaneous Self Study/Proofs"},{"type":"link","label":"Propositional Logic","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/Propositional Logic","docId":"CS70/Miscellaneous Self Study/Propositional Logic"},{"type":"link","label":"Stable Matching problem","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/Stable Matching problem","docId":"CS70/Miscellaneous Self Study/Stable Matching problem"},{"type":"link","label":"Untitled","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/Untitled","docId":"CS70/Miscellaneous Self Study/Untitled"},{"type":"link","label":"cs70_1","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/cs70_1","docId":"CS70/Miscellaneous Self Study/cs70_1"},{"type":"link","label":"cs70_2","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/cs70_2","docId":"CS70/Miscellaneous Self Study/cs70_2"},{"type":"link","label":"hw2","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/hw2","docId":"CS70/Miscellaneous Self Study/hw2"},{"type":"link","label":"propositions","href":"/old_aaronzheng/docs/CS70/Miscellaneous Self Study/propositions","docId":"CS70/Miscellaneous Self Study/propositions"}]}]},{"type":"link","label":"Notes","href":"/old_aaronzheng/docs/","docId":"index"}]},"docs":{"CS61A/cs_hmwk_notes":{"id":"CS61A/cs_hmwk_notes","title":"cs_hmwk_notes","description":"Arms-length recursion","sidebar":"tutorialSidebar"},"CS61A/disc/cs_921":{"id":"CS61A/disc/cs_921","title":"cs_921","description":"Box and pointer ntoation in Environment Diagrams","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_1":{"id":"CS61A/disc/cs_disc_1","title":"cs_disc_1","description":"Vocab: Expressions and Values","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_1012":{"id":"CS61A/disc/cs_disc_1012","title":"cs_disc_1012","description":"- Discussion notes: link","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_1017":{"id":"CS61A/disc/cs_disc_1017","title":"cs_disc_1017","description":"- Discussion notes: link","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_1019":{"id":"CS61A/disc/cs_disc_1019","title":"cs_disc_1019","description":"- Discussion notes: link","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_103":{"id":"CS61A/disc/cs_disc_103","title":"cs_disc_103","description":"- Discussion notes: link","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_105":{"id":"CS61A/disc/cs_disc_105","title":"cs_disc_105","description":"Q1 Mutability WWPD","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_1102":{"id":"CS61A/disc/cs_disc_1102","title":"cs_disc_1102","description":"Scheme List Mini-lec","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_1109":{"id":"CS61A/disc/cs_disc_1109","title":"cs_disc_1109","description":"Programs (in Python) as Data Mini-lec","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_2":{"id":"CS61A/disc/cs_disc_2","title":"cs_disc_2","description":"return print_all","sidebar":"tutorialSidebar"},"CS61A/disc/CS_disc_926":{"id":"CS61A/disc/CS_disc_926","title":"CS_disc_926","description":"Trees","sidebar":"tutorialSidebar"},"CS61A/disc/cs_disc_928":{"id":"CS61A/disc/cs_disc_928","title":"cs_disc_928","description":"- Discussion notes: link","sidebar":"tutorialSidebar"},"CS61A/Home":{"id":"CS61A/Home","title":"Home","description":"This is the homepage of my CS61A Notes.","sidebar":"tutorialSidebar"},"CS61A/lec/cs_intro":{"id":"CS61A/lec/cs_intro","title":"cs_intro","description":"What is computer science?","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec":{"id":"CS61A/lec/cs_lec","title":"cs_lec","description":"","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_1":{"id":"CS61A/lec/cs_lec_1","title":"cs_lec_1","description":"Lecture number 1:","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_10":{"id":"CS61A/lec/cs_lec_10","title":"cs_lec_10","description":"- Lecture notes: link","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_11":{"id":"CS61A/lec/cs_lec_11","title":"cs_lec_11","description":"- Lecture notes: link","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_12":{"id":"CS61A/lec/cs_lec_12","title":"cs_lec_12","description":"- Lecture notes: link","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_13":{"id":"CS61A/lec/cs_lec_13","title":"cs_lec_13","description":"- Lecture notes: link","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_14":{"id":"CS61A/lec/cs_lec_14","title":"cs_lec_14","description":"- Lecture notes: link","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_15":{"id":"CS61A/lec/cs_lec_15","title":"cs_lec_15","description":"- Lecture notes: link","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_16":{"id":"CS61A/lec/cs_lec_16","title":"cs_lec_16","description":"Lists in Environment Diagram","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_17":{"id":"CS61A/lec/cs_lec_17","title":"cs_lec_17","description":"HTTP","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_18":{"id":"CS61A/lec/cs_lec_18","title":"cs_lec_18","description":"Special Forms","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_19":{"id":"CS61A/lec/cs_lec_19","title":"cs_lec_19","description":"Scheme is a dialect of Lisp","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_2":{"id":"CS61A/lec/cs_lec_2","title":"cs_lec_2","description":"Warren Hall can be used for CS 61a help","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_20":{"id":"CS61A/lec/cs_lec_20","title":"Interpreter","description":"An\xa0interpreter\xa0is a program which can directly execute instructions in a programming language like Python or Scheme. To do this, the interpreter needs to understand how the rules of a language work, and to do that, the interpreter needs to be designed (by a human, usually!) to follow those rules. In CS 61A, we\'d like to learn how the interpreter\xa0program\xa0works and understand the ideas that go into an interpreter to reveal the magic behind how a computer makes sense of\xa0(+ 1 2)\xa0in Scheme and\xa01 + 2\xa0in Python.","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_21":{"id":"CS61A/lec/cs_lec_21","title":"Database Management Systems","description":"Database management systems (DBMS) ar important, heavily used, and interesting!","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_22":{"id":"CS61A/lec/cs_lec_22","title":"Joining Two Tablees","description":"Two tables $A$ and $B$ are joined by a comma to yield all combos of a row from A and a row from B.","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_23":{"id":"CS61A/lec/cs_lec_23","title":"Create Table","description":"And then you can define columns using the:","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_24":{"id":"CS61A/lec/cs_lec_24","title":"Aggregation","description":"select count(*) from tables","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_25":{"id":"CS61A/lec/cs_lec_25","title":"cs_lec_25","description":"-> The idea that you can organise entire programs into functions","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_3":{"id":"CS61A/lec/cs_lec_3","title":"cs_lec_3","description":"Warren Hall can be used for CS 61a help","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_4":{"id":"CS61A/lec/cs_lec_4","title":"cs_lec_4","description":"Prime Factorization","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_5":{"id":"CS61A/lec/cs_lec_5","title":"cs_lec_5","description":"Function mostly have global parent.","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_6":{"id":"CS61A/lec/cs_lec_6","title":"cs_lec_6","description":"Limitations on dictionaries","sidebar":"tutorialSidebar"},"CS61A/lec/Cs_lec_7":{"id":"CS61A/lec/Cs_lec_7","title":"Cs_lec_7","description":"Tree Abstraction","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_8":{"id":"CS61A/lec/cs_lec_8","title":"cs_lec_8","description":"Mutability","sidebar":"tutorialSidebar"},"CS61A/lec/cs_lec_9":{"id":"CS61A/lec/cs_lec_9","title":"cs_lec_9","description":"We see that","sidebar":"tutorialSidebar"},"CS61A/misc/Problems i struggled w":{"id":"CS61A/misc/Problems i struggled w","title":"Problems i struggled w","description":"Q4: Multiply Links","sidebar":"tutorialSidebar"},"CS61A/misc/problems midterm practice":{"id":"CS61A/misc/problems midterm practice","title":"problems midterm practice","description":"5. (7 points) Do You Yield?","sidebar":"tutorialSidebar"},"CS61A/misc/Quasiquotation":{"id":"CS61A/misc/Quasiquotation","title":"Quasiquotation","description":"Relating to the quote special form.","sidebar":"tutorialSidebar"},"CS61A/misc/recursion framework":{"id":"CS61A/misc/recursion framework","title":"recursion framework","description":"Reecursion Framework","sidebar":"tutorialSidebar"},"CS61A/misc/Representation":{"id":"CS61A/misc/Representation","title":"Representation","description":"KEY RULES:","sidebar":"tutorialSidebar"},"CS61A/misc/retarded error":{"id":"CS61A/misc/retarded error","title":"Scheme","description":"Traceback (most recent call last):","sidebar":"tutorialSidebar"},"CS61A/misc/Scheme Doc":{"id":"CS61A/misc/Scheme Doc","title":"Scheme Doc","description":"mu","sidebar":"tutorialSidebar"},"CS61A/misc/Scheme syntax":{"id":"CS61A/misc/Scheme syntax","title":"Scheme syntax","description":"procedure:\xa0cons\xa0obj1 obj2","sidebar":"tutorialSidebar"},"CS61A/misc/Sequences":{"id":"CS61A/misc/Sequences","title":"Sequences","description":"Sequences","sidebar":"tutorialSidebar"},"CS61A/misc/slicing":{"id":"CS61A/misc/slicing","title":"slicing","description":"slice is a function that creates a slice object. Makes list slicing easier","sidebar":"tutorialSidebar"},"CS61A/misc/Special Forms":{"id":"CS61A/misc/Special Forms","title":"Special Forms","description":"Special form expressions contain a\xa0special form\xa0as the operator. Special form expressions\xa0do not\xa0follow the same rules of evaluation as call expressions. Each special form has its own rules of evaluation -- that\'s what makes them special! Here\'s the\xa0Scheme Specification\xa0to reference the special forms we will cover in this class.","sidebar":"tutorialSidebar"},"CS61A/misc/tree_representation":{"id":"CS61A/misc/tree_representation","title":"tree_representation","description":"Tree Data Abstraction Implementation","sidebar":"tutorialSidebar"},"CS61A/misc/TREES":{"id":"CS61A/misc/TREES","title":"Trees","description":"One example of data abstraction is with\xa0trees.","sidebar":"tutorialSidebar"},"CS61A/misc/Untitled":{"id":"CS61A/misc/Untitled","title":"Untitled","description":"","sidebar":"tutorialSidebar"},"CS61A/misc/Untitled 1":{"id":"CS61A/misc/Untitled 1","title":"Untitled 1","description":"","sidebar":"tutorialSidebar"},"CS61A/misc/useless scheme":{"id":"CS61A/misc/useless scheme","title":"useless scheme","description":"Actually kinda useful","sidebar":"tutorialSidebar"},"CS61A/misc/Useless_sql":{"id":"CS61A/misc/Useless_sql","title":"Useless_sql","description":"","sidebar":"tutorialSidebar"},"CS61A/PRACTICE FINAL/INTERPRETER":{"id":"CS61A/PRACTICE FINAL/INTERPRETER","title":"INTERPRETER","description":"Notes:","sidebar":"tutorialSidebar"},"CS61A/PRACTICE FINAL/scheme":{"id":"CS61A/PRACTICE FINAL/scheme","title":"scheme","description":"","sidebar":"tutorialSidebar"},"CS61A/PRACTICE FINAL/TAIL RECURSION":{"id":"CS61A/PRACTICE FINAL/TAIL RECURSION","title":"TAIL RECURSION","description":"Question 1","sidebar":"tutorialSidebar"},"CS61A/sp21 final":{"id":"CS61A/sp21 final","title":"sp21 final","description":"Iterable to linked list:","sidebar":"tutorialSidebar"},"CS70/Home":{"id":"CS70/Home","title":"Home","description":"This is the default homepage of the CS70 class","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/Brief":{"id":"CS70/Miscellaneous Self Study/Brief","title":"Brief","description":"I AM USING INST EECS 70 2022 and 2021","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/cs70_1":{"id":"CS70/Miscellaneous Self Study/cs70_1","title":"cs70_1","description":"A fundamental principle known as the law of the excluded middle says that, for any proposition P, either P is true or \xacP is true (but not both). Thus P \u2228 \xacP is always true, regardless of the truth value of P. A propositional form that is always true regardless of the truth values of its variables is called a tautology. Conversely, a statement such as P\u2227 \xacP, which is always false, is called a contradiction","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/cs70_2":{"id":"CS70/Miscellaneous Self Study/cs70_2","title":"cs70_2","description":"","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/Graphs":{"id":"CS70/Miscellaneous Self Study/Graphs","title":"Graphs","description":"A graph is planar if it can be drawn on the plane without crossings. For example, the first four graphs shown below are planar. Notice that the first and second graphs are the same, but drawn differently. Even though the second drawing has crossings, the graph is still considered planar since it is possible to draw it without crossings.","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/hw2":{"id":"CS70/Miscellaneous Self Study/hw2","title":"hw2","description":"Suppose that there are 2n + 1 airports, where n is a positive integer. The distances between any two airports are all different. For each airport, exactly one airplane departs from it and is destined for the closest airport. Prove by induction that there is an airport which has no airplanes destined for it.","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/Practice Problems":{"id":"CS70/Miscellaneous Self Study/Practice Problems","title":"Practice Problems","description":"A celebrity at a party is someone whom everyone knows, yet who knows no one. Suppose that you are at a party with n people. For any pair of people A and B at the party, you can ask A if they know B and receive an honest answer. Give a recursive algorithm to determine whether there is a celebrity at the party, and if so who, by asking at most 3n\u22124 questions. (Note: for the purpose of this question you are just visiting the party to ask questions. What you are trying to determine is whether the n people actually attending the party include a celebrity.) Prove by induction that your algorithm always correctly identifies a celebrity if there is one, and that the number of questions is at most 3n\u22124.","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/Proofs":{"id":"CS70/Miscellaneous Self Study/Proofs","title":"Proofs","description":"![[chrome_4aZex9TrpR.png]]","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/Propositional Logic":{"id":"CS70/Miscellaneous Self Study/Propositional Logic","title":"Propositional Logic","description":"Our first building block is the notion of a proposition, which is simply a statement which is either true or false.","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/propositions":{"id":"CS70/Miscellaneous Self Study/propositions","title":"propositions","description":"Proposition 4.2.","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/Stable Matching problem":{"id":"CS70/Miscellaneous Self Study/Stable Matching problem","title":"Stable Matching problem","description":"Preference Lists","sidebar":"tutorialSidebar"},"CS70/Miscellaneous Self Study/Untitled":{"id":"CS70/Miscellaneous Self Study/Untitled","title":"Untitled","description":"","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Notes","description":"Welcome to my notes section.","sidebar":"tutorialSidebar"}}}')}}]);
"use strict";(self.webpackChunkaaronzheng=self.webpackChunkaaronzheng||[]).push([[1455],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3149:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},s=void 0,i={unversionedId:"JIPCAD/JIPCAD 1",id:"JIPCAD/JIPCAD 1",title:"JIPCAD 1",description:"1) NOMES working on Windows (about $1/2$ of the ppl)",source:"@site/docs/JIPCAD/JIPCAD 1.md",sourceDirName:"JIPCAD",slug:"/JIPCAD/JIPCAD 1",permalink:"/aaronzheng/docs/JIPCAD/JIPCAD 1",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/JIPCAD/JIPCAD 1.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Frenet",permalink:"/aaronzheng/docs/JIPCAD/Frenet"},next:{title:"JIPCAD 10",permalink:"/aaronzheng/docs/JIPCAD/JIPCAD 10"}},c={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"1) NOMES working on Windows (about ",(0,a.kt)("span",{parentName:"p",className:"math math-inline"},(0,a.kt)("span",{parentName:"span",className:"katex"},(0,a.kt)("span",{parentName:"span",className:"katex-mathml"},(0,a.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,a.kt)("semantics",{parentName:"math"},(0,a.kt)("mrow",{parentName:"semantics"},(0,a.kt)("mn",{parentName:"mrow"},"1"),(0,a.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,a.kt)("mn",{parentName:"mrow"},"2")),(0,a.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1/2")))),(0,a.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,a.kt)("span",{parentName:"span",className:"base"},(0,a.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.kt)("span",{parentName:"span",className:"mord"},"1"),(0,a.kt)("span",{parentName:"span",className:"mord"},"/"),(0,a.kt)("span",{parentName:"span",className:"mord"},"2")))))," of the ppl)\n2) Include construct recursively (cannot be done)\n3) Will make recursive use of include work\nUnexpected Black Face -> Default colors\n-> So it means you need to reverse sequence of vertices\n4) Need to use merge STL option\n5) Printers -> Go to Jacobs Hall\n6) New SLiders -> My scale -. List scale -> Sweep (add sliders)\n7) Make smooth curve using b-spline construct\n8) Make sure bspline is geometrically continous\n9) Mintorsion\nSweep: Need cross-section\n: Need path\nAzimuth: Change degree of cross section\nTorsion -> Angle of cross section start(different) with end\nMintorsion -> Take cross-section, and just extrude the thing from one vertice to another\nFigure 8 -> Flipped cross-section loop"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"local influencce of sweep"),(0,a.kt)("li",{parentName:"ul"},"Azimuth -> starting twist"),(0,a.kt)("li",{parentName:"ul"},"Twist (how much turn(total) in tlhe entire curve)")),(0,a.kt)("p",null,"Azimuth -> warp extra 20 degree positive, 30 degree negative, plus 10, negative 10, using the control points to do so. (turn in/out)"),(0,a.kt)("p",null,"Scale in control point, (x,y), scale cross-section.\nNever used option to have sweep cross section be not perpendicular to sweep path"),(0,a.kt)("p",null,"No of segments make as little as possible\nQuadrilateral control polygon\nMin no of segments = 12\nShouldn't have less than or equal to 7 segments. Order of bspline = 3,4,5\nCrash -> more prone to crash"))}u.isMDXComponent=!0}}]);
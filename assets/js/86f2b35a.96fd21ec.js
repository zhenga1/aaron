"use strict";(self.webpackChunkaaron=self.webpackChunkaaron||[]).push([[1539],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,y=p["".concat(c,".").concat(m)]||p[m]||f[m]||a;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1452:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={},i="Version 0.0",l={unversionedId:"JIPCAD/Documentation official for the Creation of the VSCODE Extension",id:"JIPCAD/Documentation official for the Creation of the VSCODE Extension",title:"Version 0.0",description:"Current functionalities:",source:"@site/docs/JIPCAD/Documentation official for the Creation of the VSCODE Extension.md",sourceDirName:"JIPCAD",slug:"/JIPCAD/Documentation official for the Creation of the VSCODE Extension",permalink:"/aaron/docs/JIPCAD/Documentation official for the Creation of the VSCODE Extension",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/JIPCAD/Documentation official for the Creation of the VSCODE Extension.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Crystal",permalink:"/aaron/docs/JIPCAD/Crystal"},next:{title:"Abstract Syntax Tree",permalink:"/aaron/docs/JIPCAD/Extension_program/Abstract Syntax Tree"}},c={},u=[],s={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"version-00"},"Version 0.0"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Current functionalities:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Text/variable syntax highlighting"),(0,o.kt)("li",{parentName:"ul"},"Autocompletion, autoclosing")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Desired functionalities:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Syntax error highlighting"),(0,o.kt)("li",{parentName:"ul"},"Toggle comment block",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"edit:")," fixed, done so by making only one implementation/version of the block comment symbol, ie, the ",(0,o.kt)("inlineCode",{parentName:"li"},"(* *)"),"."))),(0,o.kt)("li",{parentName:"ul"},"Screenview to scroll through every implementation of variables"),(0,o.kt)("li",{parentName:"ul"},"Semantic highlighting"),(0,o.kt)("li",{parentName:"ul"},"Running of executable ",(0,o.kt)("strong",{parentName:"li"},"nome"))))}p.isMDXComponent=!0}}]);
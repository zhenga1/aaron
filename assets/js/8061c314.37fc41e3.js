"use strict";(self.webpackChunkaaronzheng=self.webpackChunkaaronzheng||[]).push([[8784],{3905:(e,n,a)=>{a.d(n,{Zo:()=>o,kt:()=>h});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function p(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=t.createContext({}),c=function(e){var n=t.useContext(m),a=n;return e&&(a="function"==typeof e?e(n):p(p({},n),e)),a},o=function(e){var n=c(e.components);return t.createElement(m.Provider,{value:n},e.children)},i="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,s=e.originalType,m=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),i=c(a),u=r,h=i["".concat(m,".").concat(u)]||i[u]||d[u]||s;return a?t.createElement(h,p(p({ref:n},o),{},{components:a})):t.createElement(h,p({ref:n},o))}));function h(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=a.length,p=new Array(s);p[0]=u;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l[i]="string"==typeof e?e:r,p[1]=l;for(var c=2;c<s;c++)p[c]=a[c];return t.createElement.apply(null,p)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9782:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>i,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const s={},p="Create Table",l={unversionedId:"CS61A/lec/cs_lec_23",id:"CS61A/lec/cs_lec_23",title:"Create Table",description:"And then you can define columns using the:",source:"@site/docs/CS61A/lec/cs_lec_23.md",sourceDirName:"CS61A/lec",slug:"/CS61A/lec/cs_lec_23",permalink:"/docs/CS61A/lec/cs_lec_23",draft:!1,editUrl:"https://github.com/zhenga1/aaronzheng/tree/main/docs/CS61A/lec/cs_lec_23.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Joining Two Tablees",permalink:"/docs/CS61A/lec/cs_lec_22"},next:{title:"Aggregation",permalink:"/docs/CS61A/lec/cs_lec_24"}},m={},c=[],o={toc:c};function i(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},o,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-table"},"Create Table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE expression syntax:\n")),(0,r.kt)("p",null,"And then you can define columns using the:\n",(0,r.kt)("inlineCode",{parentName:"p"},"column-def")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"column-constraint")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'CREATE TABLE numbers(n, note);\nCREATE TABLE numbers(n UNIQUE, note);\nCREATE TABLE numbers(n, note DEFAULT "No comment");\n')),(0,r.kt)("p",null,"![","[chrome_odJjmHPhXv.png]","]\nThis will take an existing table (say, with two columns...)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To insert into one column:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INSERT INTO t VALUES (value)"),";"))),(0,r.kt)("li",{parentName:"ul"},"To insert into both columns:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"- `INSERT INTO t VALUES (values1,values2)`\n")),"We see that the values are the respective ",(0,r.kt)("strong",{parentName:"li"},"values")," of the various columns of the rows. The above commands adds a new ",(0,r.kt)("strong",{parentName:"li"},"row")," to the existing table ",(0,r.kt)("inlineCode",{parentName:"li"},"t"),".")),(0,r.kt)("p",null,"![","[chrome_PCVNlkR1OY.png]","]"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE ints SET prime=0 WHERE n > 2 AND n%2=0 AND n%3=0 AND n%5=0\n")),(0,r.kt)("p",null,"This effectively makes numbers that divide either ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"2"),(0,r.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,r.kt)("mn",{parentName:"mrow"},"3"),(0,r.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,r.kt)("mn",{parentName:"mrow"},"5")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2,3,5")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8388800000000001em",verticalAlign:"-0.19444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"2"),(0,r.kt)("span",{parentName:"span",className:"mpunct"},","),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"3"),(0,r.kt)("span",{parentName:"span",className:"mpunct"},","),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"5")))))," not a prime anymore. "),(0,r.kt)("p",null,"![","[chrome_UXdk5Da22W.png]","]\nExample codes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE FROM ints WHERE prime=0;\n")),(0,r.kt)("p",null,"This will ",(0,r.kt)("inlineCode",{parentName:"p"},"DELETE")," from the table ",(0,r.kt)("inlineCode",{parentName:"p"},"ints"),", the rows where the column ",(0,r.kt)("inlineCode",{parentName:"p"},"prime=0")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import sqlite3\n\ndb = sqlite3.Connection('db')\ndb.execute('CREATE TABLE nums AS SELECT 2, 3 UNION SELECT 4, 5')\ndb.execute('INSERT INTO nums VALUES (?, ?), (?, ?):', range(6, 10))\nprint(db.execute('SELECT * FROM nums:*').fetchall())\ndb.command()\n")),(0,r.kt)("p",null,"We see that, using ",(0,r.kt)("strong",{parentName:"p"},"python"),", we can use the ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"?")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"?")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mclose"},"?")))))," notation to get the string. The ",(0,r.kt)("inlineCode",{parentName:"p"},"db.execute")," takes a string which uses the ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"?")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"?")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mclose"},"?")))))," notation for the formatting, whereby the ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"?")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"?")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mclose"},"?")))))," represents a variable which is given later . "),(0,r.kt)("p",null,"This is the example code, a python implementation of the ",(0,r.kt)("strong",{parentName:"p"},"blackjack")," game:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import random\nimport readline\nimport sqlite3\n\n# SQL Intro\n\n# The number.db file can be made on the spot, as a text file\n# However, the file likely must exist, otherwise the python cannot \n# connect to the database.\ndb = sqlite3.Connection(\'number.db\')\ndb.execute(\'CREATE TABLE nums AS SELECT 2, 3 UNION SELECT 4, 5;\')\ndb.execute(\'INSERT INTO nums VALUES (?, ?), (?, ?);\', range(6, 10))\nprint(db.execute(\'SELECT * FROM nums;\').fetchall())\ndb.commit()\n\n# SQL Injection\n\ndb = sqlite3.Connection(":memory:")\ndb.execute("CREATE TABLE Students(name);")\ndb.execute("INSERT INTO Students VALUES (\'John\');")\n\ndef add_name(name):\n    cmd = "INSERT INTO Students VALUES (\'" + name + "\');"\n    print("Executing:", cmd)\n    db.executescript(cmd)\n    print("Students:", db.execute("select * from Students").fetchall())\n\ndef add_name_safe(name):\n    db.execute("INSERT INTO Students VALUES (?)", [name])\n    print("Students:", db.execute("select * from Students").fetchall())\n\nadd_name_safe("Jack")\nadd_name_safe("Jill")\nadd_name_safe("Robert\'); DROP TABLE Students; --");\n\n# Blackjack\n\npoints = {\'A\': 1, \'J\': 10, \'Q\': 10, \'K\':10}\npoints.update({n: n for n in range(2, 11)})\n\ndef hand_score(hand):\n    """Total score for a hand."""\n    total = sum([points[card] for card in hand])\n    if total <= 11 and \'A\' in hand:\n        return total + 10\n    return total\n\ndb = sqlite3.Connection(\'cards.db\')\nsql = db.execute\nsql(\'DROP TABLE IF EXISTS cards\')\nsql(\'CREATE TABLE cards(card, place);\')\n\ndef play(card, place):\n    """Play a card so that the player can see it."""\n    sql(\'INSERT INTO cards VALUES (?, ?)\', (card, place))\n    db.commit()\n\ndef score(who):\n    """Compute the hand score for the player or dealer."""\n    cards = sql(\'SELECT * from cards where place = ?;\', [who])\n    return hand_score([card for card, place in cards.fetchall()])\n\ndef bust(who):\n    """Check if the player or dealer went bust."""\n    return score(who) > 21\n\nplayer, dealer = "Player", "Dealer"\n\ndef play_hand(deck):\n    """Play a hand of Blackjack."""\n    play(deck.pop(), player)\n    play(deck.pop(), dealer)\n    play(deck.pop(), player)\n    hidden = deck.pop()\n\n    while \'y\' in input("Hit? ").lower():\n        play(deck.pop(), player)\n        if bust(player):\n            print(player, "went bust!")\n            return\n\n    play(hidden, dealer)\n\n    while score(dealer) < 17:\n        play(deck.pop(), dealer)\n        if bust(dealer):\n            print(dealer, "went bust!")\n            return\n\n    print(player, score(player), "and", dealer, score(dealer))\n\ndeck = list(points.keys()) * 4\nrandom.shuffle(deck)\nwhile len(deck) > 10:\n    print(\'\\nDealing...\')\n    play_hand(deck)\n    sql(\'UPDATE cards SET place="Discard";\')\n\n')),(0,r.kt)("h1",{id:"sql-injection-attack"},"SQL Injection attack"),(0,r.kt)("p",null,"This is an example using SQL Injection\n![","[WhatsApp Image 2022-11-28 at 1.52.36 PM.jpeg]","]\nWhen you are creating a sql string using other people's / user inputs, sometimes you can get some unexpected behaviours."))}i.isMDXComponent=!0}}]);
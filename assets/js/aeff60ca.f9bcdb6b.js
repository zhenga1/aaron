"use strict";(self.webpackChunkaaron=self.webpackChunkaaron||[]).push([[9106],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},i=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=c(a),k=r,d=m["".concat(p,".").concat(k)]||m[k]||u[k]||s;return a?n.createElement(d,o(o({ref:t},i),{},{components:a})):n.createElement(d,o({ref:t},i))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<s;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},7335:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const s={},o=void 0,l={unversionedId:"CS61A/lec/cs_lec_12",id:"CS61A/lec/cs_lec_12",title:"cs_lec_12",description:"- Lecture notes: link",source:"@site/docs/CS61A/lec/cs_lec_12.md",sourceDirName:"CS61A/lec",slug:"/CS61A/lec/cs_lec_12",permalink:"/aaron/docs/CS61A/lec/cs_lec_12",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CS61A/lec/cs_lec_12.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cs_lec_11",permalink:"/aaron/docs/CS61A/lec/cs_lec_11"},next:{title:"cs_lec_13",permalink:"/aaron/docs/CS61A/lec/cs_lec_13"}},p={},c=[],i={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"#r/lecture"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Lecture notes: link")),(0,r.kt)("h1",{id:"lecture-107"},"Lecture: 10/7"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jupyter"},'print("Hello world i am cool")\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Mutable values ")),(0,r.kt)("p",null,"![","[WhatsApp Image 2022-10-07 at 1.18.23 PM.jpeg]","]"),(0,r.kt)("p",null,"![","[pythonw_5kBuKRGa2t.png]","]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Object-oriented programming"),"\n",(0,r.kt)("strong",{parentName:"p"},"A method for organizing programs")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Data abstraction"),(0,r.kt)("li",{parentName:"ul"},"Bundling together information and related behaviour\n",(0,r.kt)("strong",{parentName:"li"},"A metaphor for computation using distributed state")),(0,r.kt)("li",{parentName:"ul"},"Each object has its own local state"),(0,r.kt)("li",{parentName:"ul"},"Each object also knows how to manage its own local state, based on method calls"),(0,r.kt)("li",{parentName:"ul"},"Method calls (can be thought of) as messages passed between objects"),(0,r.kt)("li",{parentName:"ul"},"Several objects may all be instances of a common type"),(0,r.kt)("li",{parentName:"ul"},"Different types may relate to each other.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Specialised syntax and vocabulary to support this metaphor"),"\n![","[WhatsApp Image 2022-10-07 at 1.25.30 PM.jpeg]","]"),(0,r.kt)("h1",{id:"classes"},"Classes"),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",{parentName:"p"},"class")," describes the general behaviour of its instances\n",(0,r.kt)("strong",{parentName:"p"},"Idea:")," All bank accounts have a ",(0,r.kt)("em",{parentName:"p"},"balance")," and an account ",(0,r.kt)("em",{parentName:"p"},"holder"),"; the ",(0,r.kt)("em",{parentName:"p"},"Account")," class should add those attributes to each newly created instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jupyter"},">>>a = Account('John')\n>>>a.holder\n'John'\n>>>a.balance\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Idea:")," All bank accounts should have ",(0,r.kt)("strong",{parentName:"p"},"withdraw")," and ",(0,r.kt)("strong",{parentName:"p"},"deposit")," behaviours that all work in the same way."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jupyter"},">>>a.deposit(15)\n15\n>>>a.withdraw(10)\n5\n>>>a.balance\n5\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Better Idea"),": All bank accounts share a ",(0,r.kt)("strong",{parentName:"p"},"withdraw")," method and a ",(0,r.kt)("strong",{parentName:"p"},"deposit")," method"),(0,r.kt)("h1",{id:"the-class-statement"},"The class Statement"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class name:\n    suite\n")),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"class statement")," creates a new class and binds that class to name in the first frame of the current environment"),(0,r.kt)("p",null,"Assignment and def statements in suite creates attributes of the class (not names in frames)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Object Construction"),"\n",(0,r.kt)("strong",{parentName:"p"},"Idea:")," All bank accounts have a ",(0,r.kt)("strong",{parentName:"p"},"balance")," and an account ",(0,r.kt)("strong",{parentName:"p"},"holder"),"; The ",(0,r.kt)("strong",{parentName:"p"},"Account")," class should add those attributes to each of its instances."),(0,r.kt)("p",null,"![","[WhatsApp Image 2022-10-07 at 1.32.40 PM.jpeg]","]"),(0,r.kt)("p",null,"Q: Is init kinda setting up defaults?\nA: Not rlly, its kinda like ",(0,r.kt)("em",{parentName:"p"},"setting up the object")," to ",(0,r.kt)("em",{parentName:"p"},"prepare it to be used"),". "),(0,r.kt)("p",null,"Can't write ",(0,r.kt)("strong",{parentName:"p"},"def constructor"),", must write ",(0,r.kt)("strong",{parentName:"p"},"def ",(0,r.kt)("em",{parentName:"strong"},"init"))),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"init"))," function is always called whenever the constructor is called."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Object Identity"),"\nEvery object that is an instance of a user-defined class has a unique identity:\n![","[chrome_HX8HwQpibp.png]","]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods"),"\nMethods are functions defined in the suite of a class statement\n![","[chrome_hlpwVyZaMp.png]","]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Invoking Methods"),"\nAll invoked methods have access to the objet via the self parameter, and so they can all access and manipulate the object's state"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Dot Expressions"),"\nObjects receive messages via dot notation"),(0,r.kt)("p",null,"Dot notation accesses attributes of the instance or its class ",(0,r.kt)("inlineCode",{parentName:"p"},"<expression>,<name>")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"<expression>")," can be any valid Python Expression\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"<name>")," must be a simple name"),(0,r.kt)("p",null,"![","[chrome_bqWGMOpvCG.png]","]\nAbove expression evaluates to the value of the attribute looked up by ",(0,r.kt)("inlineCode",{parentName:"p"},"<name>")," in the object that is the value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<expression>")),(0,r.kt)("p",null,"![","[WhatsApp Image 2022-10-07 at 1.52.10 PM.jpeg]","]"),(0,r.kt)("p",null,"Can also assign methods to instance.\nAssume we have that ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"a")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a")))))," is an Account object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"Account.deposit(a, amount) #would work\na.deposit(amount) #would also work\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Accessing Attributes"),"\nUsing getattr, we can look up an attribute "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods and Functions"),"\nPython distinguishes between:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Functions, which we have been creating since the beginning of the ccourse, and"),(0,r.kt)("li",{parentName:"ul"},"Bound methods, which couple together a function and the object on which that method will be invoked",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Object + Function = Bound Method")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Looking Up Attributes by Name"),"\nexpression, name"),(0,r.kt)("p",null,"To evaluate a dot expression:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Evlaluate the expression to the left of the dot, which yields the object of the dot expression"),(0,r.kt)("li",{parentName:"ol"},"name ..."),(0,r.kt)("li",{parentName:"ol"},"...")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Class Attributes")))}m.isMDXComponent=!0}}]);
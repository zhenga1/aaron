"use strict";(self.webpackChunkaaronzheng=self.webpackChunkaaronzheng||[]).push([[8317],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},3147:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={},i=void 0,s={unversionedId:"CS61A/disc/cs_921",id:"CS61A/disc/cs_921",title:"cs_921",description:"Box and pointer ntoation in Environment Diagrams",source:"@site/docs/CS61A/disc/cs_921.md",sourceDirName:"CS61A/disc",slug:"/CS61A/disc/cs_921",permalink:"/aaronzheng/docs/CS61A/disc/cs_921",draft:!1,editUrl:"https://github.com/zhenga1/aaronzheng/tree/main/docs/CS61A/disc/cs_921.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CS_disc_926",permalink:"/aaronzheng/docs/CS61A/disc/CS_disc_926"},next:{title:"cs_disc_1",permalink:"/aaronzheng/docs/CS61A/disc/cs_disc_1"}},c={},l=[],p={toc:l};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Box and pointer ntoation in Environment Diagrams\nLists are represented as a row of index-labeled adjacent boxes, one per element.\nEach box either contains a primitive value or points to a compound value"),(0,o.kt)("p",null,"Global frame:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pair -> List containing 1 and 2"),(0,o.kt)("li",{parentName:"ul"},"nested_list -> List containing ","[1,2]",", [], and [","[3,False,None]",",","[something else]","]")),(0,o.kt)("p",null,"Snippet of code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Python"},"f = [3]\na = [1,f]\nb = [f,2]\n\nf = 'dog'\n#so we have:\nx = 3\nf = [x]\na = [1,f]\nb = [f,2]\n\nf = 'dog'\nx = 2\n\n")),(0,o.kt)("p",null,"We see that f does not change, since x is a number it obviously is not a pointer. f is initialised with the value of x,, rather than the pointer to the number 3. "),(0,o.kt)("p",null,"We have SLICING"),(0,o.kt)("p",null,"Another code snippet:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Python"},"odds = [3,5,7,9,11]\n[odds[1],odds[2]]\n = [5,7]\n range(1,3)\nlist(range(1,3)) = [1,2]\n\nodds[1:3] = #slice of odds\n\nodds= [3,5,7,9,11]\nsum(odds) = 35\nsum(odds,start=100) = 135 -> basically start counnting from 100\nrange(10) #This is basically ranging from 0 to 9\n\nsum(lol, start = [])\n")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkaaron=self.webpackChunkaaron||[]).push([[8325],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9540:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i=void 0,s={unversionedId:"CS61A/disc/cs_disc_1109",id:"CS61A/disc/cs_disc_1109",title:"cs_disc_1109",description:"Programs (in Python) as Data Mini-lec",source:"@site/docs/CS61A/disc/cs_disc_1109.md",sourceDirName:"CS61A/disc",slug:"/CS61A/disc/cs_disc_1109",permalink:"/aaron/docs/CS61A/disc/cs_disc_1109",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CS61A/disc/cs_disc_1109.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cs_disc_1102",permalink:"/aaron/docs/CS61A/disc/cs_disc_1102"},next:{title:"cs_disc_2",permalink:"/aaron/docs/CS61A/disc/cs_disc_2"}},l={},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Programs (in Python) as Data Mini-lec")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Let's think about our code not as functions or expressions, but rather as data that we can manipulate!\nEvaluation order can cause unintended side effects ..")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def list_5(expr):\n    return f''[{e}]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"#One line if statement\n[on_true] if [expression] else [on_false]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def if_program(condition, true_result, false_result):\n    return f"{true_result} if {condition} else {false_result}"\n    \n')),(0,a.kt)("p",null,"Important takeaway: We treat our lines like data!\n",(0,a.kt)("strong",{parentName:"p"},"Hint:")," Can write one-line if statement with following syntax:\n",(0,a.kt)("inlineCode",{parentName:"p"},"<value_when_true> if <condition> else <value_when_false>")),(0,a.kt)("h1",{id:"scheme-programs-as-data"},"Scheme programs as Data"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Normal quote 'quote' and quasiquote ",(0,a.kt)("inlineCode",{parentName:"li"},"newer quote")),(0,a.kt)("li",{parentName:"ul"},"If you use quasiquote, you can ",(0,a.kt)("strong",{parentName:"li"},"unquote")," specific parts of the expression using the comma , which will evaluate the parts after the comma !\nExample:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scheme"},"> (define a 5)\na\n> (define b 3)\nb\n> `(* a b)\n(* a b)\n> `(* a ,b)\n(* a, 3)\n")),(0,a.kt)("h1",{id:"q3-if-program-scheme"},"Q3 If Program Scheme"),(0,a.kt)("p",null,"Now let's try writing the\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"if_program"),"\xa0Python example using programs as data in Scheme! There are quite a few similarities between Python and Scheme, but we have to make a few adjustments when converting our code over to Scheme. We'll start out by writing a Scheme function with the\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"define"),"\xa0form we use for normal functions."),(0,a.kt)("p",null,"First, let's consider the following questions:"),(0,a.kt)("p",null,"In the Python\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"if_program"),", we returned a\xa0",(0,a.kt)("strong",{parentName:"p"},"string"),"\xa0that, when evaluated, would execute an\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"if"),"\xa0statement with the correct parameters. In Scheme, we won't return a string, but we'll return something else that can represent an unevaluated expression. What type will we return for Scheme? Here, what \"type\" refers to the data type: function, list, integer, string, etc.."),(0,a.kt)("p",null,"`",(0,a.kt)("inlineCode",{parentName:"p"},"(if, condition, if-true, if-false)"),"\nThe output is still a list, but it would ",(0,a.kt)("strong",{parentName:"p"},"not evaluate")," everything after the first comma. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scheme"},">(if_program `(= 0 0) `3 `5)\n(if (= 0 0) 3 5)\n>(if_program (= 0 0) 3 5)\n(if #t 3 5)\n")),(0,a.kt)("p",null,"![","[WhatsApp Image 2022-11-09 at 6.28.41 PM.jpeg]","]"))}p.isMDXComponent=!0}}]);